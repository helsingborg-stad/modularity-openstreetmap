{"version":3,"file":"js/modularity-open-street-map.ab65db7e63cfc4a88ea1.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA,kDAAkD,GAAG;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,QAAQ;;;;;;UCzEvB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACsD;AACtD;AACA,mEAAkB,G","sources":["webpack://modularity-open-street-map/./source/js/front/showPost.js","webpack://modularity-open-street-map/webpack/bootstrap","webpack://modularity-open-street-map/webpack/runtime/define property getters","webpack://modularity-open-street-map/webpack/runtime/hasOwnProperty shorthand","webpack://modularity-open-street-map/webpack/runtime/make namespace object","webpack://modularity-open-street-map/./source/js/modularity-open-street-map.js"],"sourcesContent":["class ShowPost {\r\n    constructor(container, id) {\r\n        this.container = container;\r\n        this.clusters = window.leafletClusters[`${id}`] ?? false;\r\n\r\n        (window.leafletMap && this.container && window.leafletClusters) && this.handleClick();\r\n    }\r\n    handleClick() {\r\n        let paginationContainer = this.container.querySelector('[js-pagination-container]');\r\n        let sidebar = this.container.querySelector('.c-openstreetmap__sidebar');\r\n        let gridClass = false;\r\n        \r\n        paginationContainer && paginationContainer.addEventListener('click', (e) => {\r\n            let collectionItem = e.target.closest('.c-openstreetmap__collection__item');\r\n            let paginationItem = collectionItem?.parentElement;\r\n            let backButton = e.target.closest('.c-openstreetmap__post-icon');\r\n            if (paginationItem) {\r\n                if (!gridClass) {\r\n                    gridClass = paginationItem.className ? paginationItem.className : '';\r\n                }\r\n                paginationItem.className = \"\";\r\n                paginationItem.classList.add('is-active');\r\n                sidebar.classList.add('has-active');\r\n                this.setMapZoom(collectionItem);\r\n                paginationItem.scrollIntoView({block: \"start\"});\r\n            }\r\n\r\n            if (backButton) {\r\n                sidebar.classList.remove('has-active');\r\n                sidebar.querySelectorAll('[js-pagination-item]').forEach(item => {\r\n                    if (gridClass) {\r\n                        !item.classList.contains(gridClass) ? item.classList.add(gridClass) : '';\r\n                    }\r\n                    item.classList.remove('is-active');\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    setMapZoom(collectionItem) {\r\n        if (collectionItem && collectionItem.hasAttribute('js-map-lat') && collectionItem.hasAttribute('js-map-lng')) {\r\n            let lat = collectionItem.getAttribute('js-map-lat');\r\n            let lng = collectionItem.getAttribute('js-map-lng');\r\n            if (lat && lng) {\r\n                let markerLatLng = L.latLng(lat, lng);\r\n                let markers = this.clusters;\r\n                let marker;\r\n                markers.getLayers().forEach(function (layer) {\r\n                    if (layer instanceof L.Marker && layer.getLatLng().equals(markerLatLng)) {\r\n                        marker = layer;\r\n                    } else if (layer instanceof L.MarkerCluster) {\r\n                        layer.getAllChildMarkers().forEach(function (child) {\r\n                            if (child.getLatLng().equals(markerLatLng)) {\r\n                                marker = child;\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                if (marker) {\r\n                    marker.fireEvent('click');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function initializeMapClick() {\r\n    [...document.querySelectorAll('.c-openstreetmap')].forEach(container => {\r\n        let id = container.getAttribute('id') ?? false;\r\n        id && new ShowPost(container, id);\r\n    });\r\n}\r\n\r\nexport default ShowPost;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import Map from './front/map';\r\nimport { initializeMapClick } from './front/showPost';\r\n\r\ninitializeMapClick();"],"names":[],"sourceRoot":""}